vim.cmd([[ 
 augroup sqlite
     autocmd!
	 au FileType sql iab <buffer> abort ABORT
	 au FileType sql iab <buffer> action ACTION
	 au FileType sql iab <buffer> add ADD
	 au FileType sql iab <buffer> after AFTER
	 au FileType sql iab <buffer> all ALL
	 au FileType sql iab <buffer> alter ALTER
	 au FileType sql iab <buffer> analyze ANALYZE
	 au FileType sql iab <buffer> and AND
	 au FileType sql iab <buffer> as AS
	 au FileType sql iab <buffer> asc ASC
	 au FileType sql iab <buffer> attach ATTACH
	 au FileType sql iab <buffer> autoincrement AUTOINCREMENT
	 au FileType sql iab <buffer> before BEFORE
	 au FileType sql iab <buffer> begin BEGIN
	 au FileType sql iab <buffer> between BETWEEN
	 au FileType sql iab <buffer> by BY
	 au FileType sql iab <buffer> cascade CASCADE
	 au FileType sql iab <buffer> case CASE
	 au FileType sql iab <buffer> cast CAST
	 au FileType sql iab <buffer> check CHECK
	 au FileType sql iab <buffer> collate COLLATE
	 au FileType sql iab <buffer> column COLUMN
	 au FileType sql iab <buffer> commit COMMIT
	 au FileType sql iab <buffer> conflict CONFLICT
	 au FileType sql iab <buffer> constraint CONSTRAINT
	 au FileType sql iab <buffer> create CREATE
	 au FileType sql iab <buffer> cross CROSS
	 au FileType sql iab <buffer> database DATABASE
	 au FileType sql iab <buffer> decimal DECIMAL
	 au FileType sql iab <buffer> default DEFAULT
	 au FileType sql iab <buffer> deferrable DEFERRABLE
	 au FileType sql iab <buffer> deferred DEFERRED
	 au FileType sql iab <buffer> delete DELETE
	 au FileType sql iab <buffer> desc DESC
	 au FileType sql iab <buffer> detach DETACH
	 au FileType sql iab <buffer> distinct DISTINCT
	 au FileType sql iab <buffer> drop DROP
	 au FileType sql iab <buffer> each EACH
	 au FileType sql iab <buffer> else ELSE
	 au FileType sql iab <buffer> end END
	 au FileType sql iab <buffer> escape ESCAPE
	 au FileType sql iab <buffer> except EXCEPT
	 au FileType sql iab <buffer> exclusive EXCLUSIVE
	 au FileType sql iab <buffer> exists EXISTS
	 au FileType sql iab <buffer> explain EXPLAIN
	 au FileType sql iab <buffer> fail FAIL
	 au FileType sql iab <buffer> for FOR
	 au FileType sql iab <buffer> foreign FOREIGN
	 au FileType sql iab <buffer> from FROM
	 au FileType sql iab <buffer> full FULL
	 au FileType sql iab <buffer> glob GLOB
	 au FileType sql iab <buffer> group GROUP
	 au FileType sql iab <buffer> having HAVING
	 au FileType sql iab <buffer> if IF
	 au FileType sql iab <buffer> ignore IGNORE
	 au FileType sql iab <buffer> immediate IMMEDIATE
	 au FileType sql iab <buffer> in IN
	 au FileType sql iab <buffer> index INDEX
	 au FileType sql iab <buffer> indexed INDEXED
	 au FileType sql iab <buffer> initially INITIALLY
	 au FileType sql iab <buffer> inner INNER
	 au FileType sql iab <buffer> insert INSERT
	 au FileType sql iab <buffer> instead INSTEAD
	 au FileType sql iab <buffer> intersect INTERSECT
	 au FileType sql iab <buffer> into INTO
	 au FileType sql iab <buffer> integer INTEGER
	 au FileType sql iab <buffer> is IS
	 au FileType sql iab <buffer> isnull ISNULL
	 au FileType sql iab <buffer> join JOIN
	 au FileType sql iab <buffer> key KEY
	 au FileType sql iab <buffer> left LEFT
	 au FileType sql iab <buffer> like LIKE
	 au FileType sql iab <buffer> limit LIMIT
	 au FileType sql iab <buffer> match MATCH
	 au FileType sql iab <buffer> natural NATURAL
	 au FileType sql iab <buffer> no NO
	 au FileType sql iab <buffer> not NOT
	 au FileType sql iab <buffer> notnull NOTNULL
	 au FileType sql iab <buffer> null NULL
	 au FileType sql iab <buffer> of OF
	 au FileType sql iab <buffer> offset OFFSET
	 au FileType sql iab <buffer> on ON
	 au FileType sql iab <buffer> or OR
	 au FileType sql iab <buffer> order ORDER
	 au FileType sql iab <buffer> outer OUTER
	 au FileType sql iab <buffer> plan PLAN
	 au FileType sql iab <buffer> pragma PRAGMA
	 au FileType sql iab <buffer> primary PRIMARY
	 au FileType sql iab <buffer> query QUERY
	 au FileType sql iab <buffer> raise RAISE
	 au FileType sql iab <buffer> recursive RECURSIVE
	 au FileType sql iab <buffer> references REFERENCES
	 au FileType sql iab <buffer> regexp REGEXP
	 au FileType sql iab <buffer> reindex REINDEX
	 au FileType sql iab <buffer> release RELEASE
	 au FileType sql iab <buffer> rename RENAME
	 au FileType sql iab <buffer> replace REPLACE
	 au FileType sql iab <buffer> restrict RESTRICT
	 au FileType sql iab <buffer> right RIGHT
	 au FileType sql iab <buffer> rollback ROLLBACK
	 au FileType sql iab <buffer> row ROW
	 au FileType sql iab <buffer> savepoint SAVEPOINT
	 au FileType sql iab <buffer> select SELECT
	 au FileType sql iab <buffer> set SET
	 au FileType sql iab <buffer> table TABLE
	 au FileType sql iab <buffer> temp TEMP
	 au FileType sql iab <buffer> temporary TEMPORARY
	 au FileType sql iab <buffer> text TEXT
	 au FileType sql iab <buffer> then THEN
	 au FileType sql iab <buffer> to TO
	 au FileType sql iab <buffer> transaction TRANSACTION
	 au FileType sql iab <buffer> trigger TRIGGER
	 au FileType sql iab <buffer> union UNION
	 au FileType sql iab <buffer> unique UNIQUE
	 au FileType sql iab <buffer> update UPDATE
	 au FileType sql iab <buffer> using USING
	 au FileType sql iab <buffer> vacuum VACUUM
	 au FileType sql iab <buffer> values VALUES
	 au FileType sql iab <buffer> view VIEW
	 au FileType sql iab <buffer> virtual VIRTUAL
	 au FileType sql iab <buffer> when WHEN
	 au FileType sql iab <buffer> where WHERE
	 au FileType sql iab <buffer> with WITH
	 au FileType sql iab <buffer> without WITHOUT
 augroup END
]])

